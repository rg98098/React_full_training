Class Two: Theory Assignment

Q1:	  What is `NPM`?
Ans:	NPM is the world largest software library(Registry). It also package manager and 
installer. Open source developers use it to share software. It is free to use.

Q2: 	What is `Parcel/Webpack`? Why do we need it?
Ans:	Parcel/Webpack are the bundlers that used for mostly Javascript and Typescript. It offers blazing fast performance utilizing multicore processing and requires zero configuration.

Q3:   What is `.parcel-cache`?
Ans:  Parcel cache stores a information about your project when parcel build it, so when it rebuilds, it
      it doesn't have to re-parse and re-analyze everything from the scratch.

Q4:   What is `npx` ?
Ans:  A tool for executing node packages.

Q5:   What is difference between `dependencies` vs `devDependencies`?
Ans:  devDependencies are modules which are only required during development, while dependencies are
      modules hich are also required at runtime.

Q6:   What is Tree Shaking?
Ans:  Tree shaking means removing unreachable code from the bundle.

Q7:   What is Hot Module Replacement?
Ans:  Hot Module Replacement (HMR) exchanges, adds, or removes modules while an application is running, without a full reload. This can significantly speed up development in a few ways: Retain application state which is lost during a full reload.

Q8:   List down your favourite 5 superpowers of Parcel and describe any 3 of them in your
      own words.
Ans:  HMR - Hot module replacement : Parcel provides HMR properties to keep track of files changes by   using file watcher algorithms.
      Compression : Parcel provides compression properties to compress our files e.g images to optimize the performance of our app.
      Minification : Parcel minifies the code.
      Zero config : Unlike Webpack, Parcel requires zero configurations to setup.
      Old browser competibility : Parcel allows support for older broser also.

Q9:  What is .gitignore? What should we add and not add into it?
Ans: This file contains the list of files that we should not commit to the repository.

Q10. What is the difference betweeen package.json and package-lock.json.

Ans:  package.json : this file is mandatory for every project. It contains basicinformation about the project Application name/version/scripts (ng scripts)

      package-lock.json : This file is automatically generated for those operations where npm modifies either the node_module tree or package-json.
        It is generated after an npm install
        It allows future devs & automated systems to download the same dependencies as the project.
        It records the same version of the installed packages which allows to reinstall them. Future installs wll be capable of building identical description tree.

Q11. Why should I not modify package-lock.json?
Ans:    package-lock.json file contains the information about the dependencies and their versions used in the project. Modifying, it would cause depencies issues in the production environment.

Q12: What is `node_modules` ? Is it a good idea to push that on git?
Ans:  `node_modules` is a folder that contains all the packages and dependecies used for the development of the applicaion. It is big file that we should not push to github.

Q13:  What is the `dist` folder?
Ans:  dist folder is created when parcel creates the build for the application . It contains the required file that help to run your application, files like HTML and CSS and JS with other files for the build.

Q14:  What is browserlists?
Ans   browserlist is a list browsers that our applicaion should support . It also covers the browser coverage over a geographical area. It help to run our application in older browser.